<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>小丛路子野</title>
    <link>http://congpeitong.fun/</link>
    <description>Recent content on 小丛路子野</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 26 May 2023 00:00:00 +0800</lastBuildDate><atom:link href="http://congpeitong.fun/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About</title>
      <link>http://congpeitong.fun/about/</link>
      <pubDate>Wed, 08 May 2024 18:12:03 +0800</pubDate>
      
      <guid>http://congpeitong.fun/about/</guid>
      <description>生命短暂犹若露珠消散，人们在奔波中探寻答案。 运数仿佛大海起伏不定，掌上迷离脉纹回路漫漫。 长剑在黑夜吟唱悲歌，岁月如斑驳铜镜经年。 天际流火叩响大地之门，岁月星辰刻</description>
    </item>
    
    <item>
      <title>🌞 导航</title>
      <link>http://congpeitong.fun/nav/</link>
      <pubDate>Wed, 08 May 2024 00:00:00 +0800</pubDate>
      
      <guid>http://congpeitong.fun/nav/</guid>
      <description>🌞 我的 博の客 服务器处理能力预算的方法 🔨 工具 手绘形式的画图工具 坐标转换 草料二维码 Html取色器 图标制作 阿里巴巴图库 SSH工具 在线时间戳转换工具 工具侠 📑 文档 中文文档</description>
    </item>
    
    <item>
      <title>Java注解</title>
      <link>http://congpeitong.fun/posts/java/java%E6%B3%A8%E8%A7%A3/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/java/java%E6%B3%A8%E8%A7%A3/</guid>
      <description>注解定义 使用@interface语法来定义注解（Annotation），格式如下： 1 2 3 4 5 public @interface Report { int type() default 0; String level() default &amp;#34;info&amp;#34;; String value() default &amp;#34;&amp;#34;; } 注解的参数类似无参数方法，可以用d</description>
    </item>
    
    <item>
      <title>Java流的使用</title>
      <link>http://congpeitong.fun/posts/java/java%E6%B5%81%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/java/java%E6%B5%81%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>Stream概述 Stream将要处理的元素集合看作一种流，在流的过程中，借助Stream API对流中的元素进行操作，可以由数组或者集合创建，比如：筛选、排序、聚</description>
    </item>
    
    <item>
      <title>maven多模块无法扫描到xml问题</title>
      <link>http://congpeitong.fun/posts/java/maven%E5%A4%9A%E6%A8%A1%E5%9D%97%E6%97%A0%E6%B3%95%E6%89%AB%E6%8F%8F%E5%88%B0xml%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/java/maven%E5%A4%9A%E6%A8%A1%E5%9D%97%E6%97%A0%E6%B3%95%E6%89%AB%E6%8F%8F%E5%88%B0xml%E9%97%AE%E9%A2%98/</guid>
      <description>一个SpringBoot项目，有多个模块，每个模块都有自己的pom.xml，但是maven无法扫描其它模块的xml文件。 查询解决办法：application.y</description>
    </item>
    
    <item>
      <title>SpringBoot生成二维码</title>
      <link>http://congpeitong.fun/posts/java/springboot%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/springboot%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/java/springboot%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/springboot%E7%94%9F%E6%88%90%E4%BA%8C%E7%BB%B4%E7%A0%81/</guid>
      <description>引入Google的依赖 1 2 3 4 5 6 &amp;lt;!-- 二维码生成 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.google.zxing&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;javase&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.3.0&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; 二维码生成工具类 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43</description>
    </item>
    
    <item>
      <title>xml解析</title>
      <link>http://congpeitong.fun/posts/java/xml%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/java/xml%E8%A7%A3%E6%9E%90/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 public class test { public static void main(String[] args) { try { xmlString = &amp;#34;&amp;lt;?xml version=\&amp;#34;1.0\&amp;#34; encoding=\&amp;#34;UTF-8\&amp;#34; standalone=\&amp;#34;no\&amp;#34;?&amp;gt;\n&amp;#34; + &amp;#34;&amp;lt;soap:Envelope xmlns:soap=\&amp;#34;http://schemas.xmlsoap.org/soap/envelope/\&amp;#34;&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;soap:Body&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;ns2:importFilesForXMLResponse xmlns:ns2=\&amp;#34;http://service.webservice.archive.component.ces.com/\&amp;#34;&amp;gt;\n&amp;#34; + &amp;#34; &amp;lt;return&amp;gt;{\&amp;#34;s</description>
    </item>
    
    <item>
      <title>时间戳和时间之间的转换</title>
      <link>http://congpeitong.fun/posts/java/%E6%97%B6%E9%97%B4%E6%88%B3%E5%92%8C%E6%97%B6%E9%97%B4%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/java/%E6%97%B6%E9%97%B4%E6%88%B3%E5%92%8C%E6%97%B6%E9%97%B4%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 //将时间转换为时间戳 public static String dateToStamp(String s) throws Exception { String res; //设置时间格式，将该时间格式的时间转换为时间戳 SimpleDateFormat simpleDateFormat = new SimpleDateFormat(&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;); Date date = simpleDateFormat.parse(s); long time =</description>
    </item>
    
    <item>
      <title>麒麟操作系统安装Java环境</title>
      <link>http://congpeitong.fun/posts/java/%E9%BA%92%E9%BA%9F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85java%E7%8E%AF%E5%A2%83/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/java/%E9%BA%92%E9%BA%9F%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85java%E7%8E%AF%E5%A2%83/</guid>
      <description>参考文章 https://blog.csdn.net/job_csdn/article/details/128136490 1. 下载Linux版本的JDK1.8 https://www.oracle.com/java/technologies/downloads/#java8 一定要下载对应操作架构的JDK，否则会报错：可通过uname -a 命令查看 2. 将下载好的安装包xx.tar.gz放到安装</description>
    </item>
    
  </channel>
</rss>
