<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on 小丛路子野</title>
    <link>http://congpeitong.fun/tags/nginx/</link>
    <description>Recent content in Nginx on 小丛路子野</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 09 May 2024 19:02:31 +0800</lastBuildDate><atom:link href="http://congpeitong.fun/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>规避请求方式的方法</title>
      <link>http://congpeitong.fun/posts/web/%E8%A7%84%E9%81%BF%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 09 May 2024 19:02:31 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/web/%E8%A7%84%E9%81%BF%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>vue-cli请求拦截器中添加以下代码 1 2 3 4 if (config.method === &amp;#39;delete&amp;#39; || config.method === &amp;#39;put&amp;#39; || config.method === &amp;#39;option&amp;#39;) { config.headers[&amp;#39;ORIGINAL_METHOD&amp;#39;] = config.method.toUpperCase(); config.method = &amp;#39;POST&amp;#39; } Nginx请求中的配置 location /xxxx请求/{ # 还原原始请求方法 set $ori_method $request_method; if ($http_ORIGINAL_METHOD != &amp;#39;&amp;#39;)</description>
    </item>
    
    <item>
      <title>Nginx常用命令</title>
      <link>http://congpeitong.fun/posts/nginx/nginx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 09 May 2024 12:59:59 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/nginx/nginx%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</guid>
      <description>Linux下常用命令 1 2 3 4 5 6 7 8 9 10 11 12 # 首先进入Nginx的安装目录，一般情况下安装目录为 /usr/local/local/sbin # 查看版本 ./nginx -v # 启动 ./nginx # 重启 ./nginx -s reopen # 重新载入配置文件 ./nginx -s reload # 查</description>
    </item>
    
    <item>
      <title>Nginx常用基础配置</title>
      <link>http://congpeitong.fun/posts/nginx/nginx%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Thu, 09 May 2024 12:59:53 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/nginx/nginx%E5%B8%B8%E7%94%A8%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</guid>
      <description>基础配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 user root; worker_processes 1; events { worker_connections 10240; } http { log_format &amp;#39;$remote_addr - $remote_user [$time_local] &amp;#39; &amp;#39;&amp;#34;$request&amp;#34; $status $body_bytes_sent &amp;#39; &amp;#39;&amp;#34;$http_referer&amp;#34; &amp;#34;$http_user_agent&amp;#34;&amp;#39;; include mime.types; default_type application/octet-stream; sendfile on; #autoindex on; #autoindex_exact_size off; autoindex_localtime on; keepalive_timeout 65; gzip on; gzip_disable &amp;#34;msie6&amp;#34;;</description>
    </item>
    
    <item>
      <title>Linux下安装Nginx</title>
      <link>http://congpeitong.fun/posts/nginx/linux%E4%B8%8B%E5%AE%89%E8%A3%85nginx/</link>
      <pubDate>Thu, 09 May 2024 12:59:44 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/nginx/linux%E4%B8%8B%E5%AE%89%E8%A3%85nginx/</guid>
      <description>下载Nginx 下载地址：【http://nginx.org/en/download.html】 解压并放到服务器上 进入Nginx目录 1 2 3 4 # 如果出现 -bash: ./configure: Permission denied 则执</description>
    </item>
    
    <item>
      <title>Linux访问web目录提示403的问题</title>
      <link>http://congpeitong.fun/posts/nginx/linux%E8%AE%BF%E9%97%AEweb%E7%9B%AE%E5%BD%95%E6%8F%90%E7%A4%BA403%E7%9A%84%E9%97%AE%E9%A2%98/</link>
      <pubDate>Thu, 09 May 2024 12:59:32 +0800</pubDate>
      
      <guid>http://congpeitong.fun/posts/nginx/linux%E8%AE%BF%E9%97%AEweb%E7%9B%AE%E5%BD%95%E6%8F%90%E7%A4%BA403%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
      <description>在Linux下http服务Nginx时，访问Web目录提示403Foridden，403表示你在请求一个资源文件但是Nginx不允许你查看。 解决办法 找到ngin</description>
    </item>
    
  </channel>
</rss>
